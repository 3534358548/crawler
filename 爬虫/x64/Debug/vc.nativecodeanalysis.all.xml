<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH></FILEPATH>
      <FILENAME></FILENAME>
      <LINE>0</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>6800</DEFECTCODE>
    <DESCRIPTION>通过 /analyze:ruleset 或 /analyze:external:ruleset 选项指定的规则集文件无法成功分析，将被忽略。</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>85</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>函数 file_path 可以声明为 noexcept (f.6)。</DESCRIPTION>
    <FUNCTION>file_path</FUNCTION>
    <DECORATED>?file_path@@YAXXZ</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>返回值被忽略: “sscanf”。</DESCRIPTION>
    <FUNCTION>Analyse</FUNCTION>
    <DECORATED>?Analyse@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>避免显式调用 new 和 delete，请改用 std::make_unique&lt;T&gt; (r.11)。</DESCRIPTION>
    <FUNCTION>Analyse</FUNCTION>
    <DECORATED>?Analyse@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>请勿将包含owner&lt;T&gt;返回值的分配或函数调用结果分配给原始指针，请改用owner&lt;T&gt; (i.11)。</DESCRIPTION>
    <FUNCTION>Analyse</FUNCTION>
    <DECORATED>?Analyse@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>请勿删除不是 owner&lt;T&gt; 的原始指针(i.11)。</DESCRIPTION>
    <FUNCTION>Analyse</FUNCTION>
    <DECORATED>?Analyse@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>避免显式调用 new 和 delete，请改用 std::make_unique&lt;T&gt; (r.11)。</DESCRIPTION>
    <FUNCTION>Analyse</FUNCTION>
    <DECORATED>?Analyse@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>请勿使用指针算法。改用 span (bounds.1)。</DESCRIPTION>
    <FUNCTION>Analyse</FUNCTION>
    <DECORATED>?Analyse@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 g_Host: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Analyse</FUNCTION>
    <DECORATED>?Analyse@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>160</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 g_Host: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Analyse</FUNCTION>
    <DECORATED>?Analyse@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>161</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 g_Object: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Analyse</FUNCTION>
    <DECORATED>?Analyse@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>198</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>6387</DEFECTCODE>
    <DESCRIPTION>"p-&gt;h_addr_list[0]" 可以是 "0"。</DESCRIPTION>
    <FUNCTION>Connect</FUNCTION>
    <DECORATED>?Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>170</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>171</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>174</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>175</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>178</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>179</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>184</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>184</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>188</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>190</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>190</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>197</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>198</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 g_Host: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Connect</FUNCTION>
    <DECORATED>?Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>184</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>请勿使用指针算法。改用 span (bounds.1)。</DESCRIPTION>
    <FUNCTION>Connect</FUNCTION>
    <DECORATED>?Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>185</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>请勿使用指针算法。改用 span (bounds.1)。</DESCRIPTION>
    <FUNCTION>Connect</FUNCTION>
    <DECORATED>?Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>190</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>请勿使用指针算法。改用 span (bounds.1)。</DESCRIPTION>
    <FUNCTION>Connect</FUNCTION>
    <DECORATED>?Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>192</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>请勿使用指针算法。改用 span (bounds.1)。</DESCRIPTION>
    <FUNCTION>Connect</FUNCTION>
    <DECORATED>?Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>198</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>请勿使用指针算法。改用 span (bounds.1)。</DESCRIPTION>
    <FUNCTION>Connect</FUNCTION>
    <DECORATED>?Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>167</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>函数 Connect 可以声明为 noexcept (f.6)。</DESCRIPTION>
    <FUNCTION>Connect</FUNCTION>
    <DECORATED>?Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>192</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>请勿使用 C 样式转换(type.4)。</DESCRIPTION>
    <FUNCTION>Connect</FUNCTION>
    <DECORATED>?Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>202</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>请勿使用 C 样式转换(type.4)。</DESCRIPTION>
    <FUNCTION>Connect</FUNCTION>
    <DECORATED>?Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>207</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>函数 SSL_Connect 可以声明为 noexcept (f.6)。</DESCRIPTION>
    <FUNCTION>SSL_Connect</FUNCTION>
    <DECORATED>?SSL_Connect@@YA_NXZ</DECORATED>
    <FUNCLINE>207</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>251</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 temp1: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Gethtml</FUNCTION>
    <DECORATED>?Gethtml@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>254</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 g_Object: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Gethtml</FUNCTION>
    <DECORATED>?Gethtml@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>255</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 g_Host: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Gethtml</FUNCTION>
    <DECORATED>?Gethtml@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>267</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 buff: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Gethtml</FUNCTION>
    <DECORATED>?Gethtml@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>269</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>只使用常量表达式在数组中编制索引(bounds.2)。</DESCRIPTION>
    <FUNCTION>Gethtml</FUNCTION>
    <DECORATED>?Gethtml@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>270</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 buff: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Gethtml</FUNCTION>
    <DECORATED>?Gethtml@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>272</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 buff: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Gethtml</FUNCTION>
    <DECORATED>?Gethtml@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>269</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>优先使用 gsl::at() 而非未选中的下标运算符(bounds.4)。</DESCRIPTION>
    <FUNCTION>Gethtml</FUNCTION>
    <DECORATED>?Gethtml@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>264</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>未初始化变量 buff。始终初始化对象(type.5)。</DESCRIPTION>
    <FUNCTION>Gethtml</FUNCTION>
    <DECORATED>?Gethtml@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>buff</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>282</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>避免显式调用 new 和 delete，请改用 std::make_unique&lt;T&gt; (r.11)。</DESCRIPTION>
    <FUNCTION>UtfToGbk</FUNCTION>
    <DECORATED>?UtfToGbk@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z</DECORATED>
    <FUNCLINE>279</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>282</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>请勿将包含owner&lt;T&gt;返回值的分配或函数调用结果分配给原始指针，请改用owner&lt;T&gt; (i.11)。</DESCRIPTION>
    <FUNCTION>UtfToGbk</FUNCTION>
    <DECORATED>?UtfToGbk@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z</DECORATED>
    <FUNCLINE>279</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>286</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>避免显式调用 new 和 delete，请改用 std::make_unique&lt;T&gt; (r.11)。</DESCRIPTION>
    <FUNCTION>UtfToGbk</FUNCTION>
    <DECORATED>?UtfToGbk@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z</DECORATED>
    <FUNCLINE>279</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>286</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>请勿将包含owner&lt;T&gt;返回值的分配或函数调用结果分配给原始指针，请改用owner&lt;T&gt; (i.11)。</DESCRIPTION>
    <FUNCTION>UtfToGbk</FUNCTION>
    <DECORATED>?UtfToGbk@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z</DECORATED>
    <FUNCLINE>279</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>289</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>请勿删除不是 owner&lt;T&gt; 的原始指针(i.11)。</DESCRIPTION>
    <FUNCTION>UtfToGbk</FUNCTION>
    <DECORATED>?UtfToGbk@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z</DECORATED>
    <FUNCLINE>279</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>289</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>避免显式调用 new 和 delete，请改用 std::make_unique&lt;T&gt; (r.11)。</DESCRIPTION>
    <FUNCTION>UtfToGbk</FUNCTION>
    <DECORATED>?UtfToGbk@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z</DECORATED>
    <FUNCLINE>279</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>282</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>UtfToGbk</FUNCTION>
    <DECORATED>?UtfToGbk@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z</DECORATED>
    <FUNCLINE>279</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>283</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>UtfToGbk</FUNCTION>
    <DECORATED>?UtfToGbk@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z</DECORATED>
    <FUNCLINE>279</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>286</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>UtfToGbk</FUNCTION>
    <DECORATED>?UtfToGbk@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z</DECORATED>
    <FUNCLINE>279</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>287</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>UtfToGbk</FUNCTION>
    <DECORATED>?UtfToGbk@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z</DECORATED>
    <FUNCLINE>279</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>296</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26814</DEFECTCODE>
    <DESCRIPTION>可在编译时计算常量变量“newsize”。请考虑使用 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>stringToLPCWSTR</FUNCTION>
    <DECORATED>?stringToLPCWSTR@@YAPEB_WV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>295</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>变量“origsize”在构造后不会变化，请将其标记为 const (con.4)。</DESCRIPTION>
    <FUNCTION>stringToLPCWSTR</FUNCTION>
    <DECORATED>?stringToLPCWSTR@@YAPEB_WV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>298</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26408</DEFECTCODE>
    <DESCRIPTION>避免使用 malloc()和 free()，首选 nothrow 版本的 new 与 delete (r.10)。</DESCRIPTION>
    <FUNCTION>stringToLPCWSTR</FUNCTION>
    <DECORATED>?stringToLPCWSTR@@YAPEB_WV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>293</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>函数 stringToLPCWSTR 可以声明为 noexcept (f.6)。</DESCRIPTION>
    <FUNCTION>stringToLPCWSTR</FUNCTION>
    <DECORATED>?stringToLPCWSTR@@YAPEB_WV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>298</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>请勿使用 C 样式转换(type.4)。</DESCRIPTION>
    <FUNCTION>stringToLPCWSTR</FUNCTION>
    <DECORATED>?stringToLPCWSTR@@YAPEB_WV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>314</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>6244</DEFECTCODE>
    <DESCRIPTION>“number”的局部声明遮蔽了此前位于“25”行(“g:\c语言\爬虫\爬虫\爬虫.cpp”中)的声明。</DESCRIPTION>
    <FUNCTION>results</FUNCTION>
    <DECORATED>?results@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>305</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
        <FILENAME>爬虫.cpp</FILENAME>
        <LINE>25</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>317</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>优先使用 gsl::at() 而非未选中的下标运算符(bounds.4)。</DESCRIPTION>
    <FUNCTION>results</FUNCTION>
    <DECORATED>?results@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>305</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>317</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>优先使用 gsl::at() 而非未选中的下标运算符(bounds.4)。</DESCRIPTION>
    <FUNCTION>results</FUNCTION>
    <DECORATED>?results@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>305</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>325</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>优先使用 gsl::at() 而非未选中的下标运算符(bounds.4)。</DESCRIPTION>
    <FUNCTION>results</FUNCTION>
    <DECORATED>?results@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>305</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>333</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>优先使用 gsl::at() 而非未选中的下标运算符(bounds.4)。</DESCRIPTION>
    <FUNCTION>results</FUNCTION>
    <DECORATED>?results@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>305</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>333</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>优先使用 gsl::at() 而非未选中的下标运算符(bounds.4)。</DESCRIPTION>
    <FUNCTION>results</FUNCTION>
    <DECORATED>?results@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>305</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>341</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>优先使用 gsl::at() 而非未选中的下标运算符(bounds.4)。</DESCRIPTION>
    <FUNCTION>results</FUNCTION>
    <DECORATED>?results@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>305</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>381</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>变量“len”在构造后不会变化，请将其标记为 const (con.4)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>382</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>变量“nmlen”在构造后不会变化，请将其标记为 const (con.4)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>397</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>变量“lenname”在构造后不会变化，请将其标记为 const (con.4)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>398</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>变量“namelen”在构造后不会变化，请将其标记为 const (con.4)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>403</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>变量“hr”在构造后不会变化，请将其标记为 const (con.4)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>383</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>避免显式调用 new 和 delete，请改用 std::make_unique&lt;T&gt; (r.11)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>383</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>请勿将包含owner&lt;T&gt;返回值的分配或函数调用结果分配给原始指针，请改用owner&lt;T&gt; (i.11)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>399</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>避免显式调用 new 和 delete，请改用 std::make_unique&lt;T&gt; (r.11)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>399</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>请勿将包含owner&lt;T&gt;返回值的分配或函数调用结果分配给原始指针，请改用owner&lt;T&gt; (i.11)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>389</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 filename: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>390</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 tempfp: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>391</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 filename: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>392</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 filename: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>393</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 filename: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>G:\C语言\爬虫\爬虫\</FILEPATH>
      <FILENAME>爬虫.cpp</FILENAME>
      <LINE>396</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>表达式 filename: 没有数组要进行指针转型(bounds.3)。</DESCRIPTION>
    <FUNCTION>Download</FUNCTION>
    <DECORATED>?Download@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>376</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>